* Install/configure the elixir support

** [Alchemist](https://github.com/tonini/alchemist.el)

   #+BEGIN_SRC emacs-lisp

     ;; (use-package alchemist
     ;;   :config
     ;;   (add-to-list 'elixir-mode-hook 'alchemist-mode)
     ;;   :custom
     ;;   (alchemist-goto-erlang-source-dir (expand-file-name "~/Development/Clone/otp"))
     ;;   (alchemist-goto-elixir-source-dir (expand-file-name "~/Development/Clone/elixir"))
     ;;   (alchemist-hooks-test-on-save t)
     ;;   (alchemist-mix-test-default-options (quote ("--only focus")))
     ;;   (alchemist-test-display-compilation-output t)
     ;; )

     ;; (use-package company
     ;;   :config
     ;;   (add-to-list 'alchemist-mode-hook 'company-mode)
     ;; )

     ;; (add-hook 'elixir-mode-hook
     ;;   (lambda () (add-hook 'before-save-hook 'elixir-format nil t))
     ;; )

   #+END_SRC

** LSP

   #+BEGIN_SRC emacs-lisp

    (use-package lsp-mode
      :hook (
        (elixir-mode . lsp-deferred)
      )
    )

   #+END_SRC

   Note: You also need to install [[https://github.com/elixir-lsp/elixir-ls][elixir_ls]] ...

   - =mix elixir_ls.release -o ~/.local/bin=

** ExUnit

   #+BEGIN_SRC emacs-lisp

    (use-package exunit
      :bind (
        ("C-c C-u u" . 'exunit-verify-all)
        ("C-c C-u f" . 'exunit-verify)
        ("C-c C-u p" . 'exunit-verify-single)
        ("C-c C-u r" . 'exunit-rerun)
        ("C-c C-u t" . 'exunit-toggle-file-and-test)
      )
      :hook (
        (after-save . my-exunit-after-save-hook)
      )
      :config
      (defun my-exunit-after-save-hook ()
        (when (eq major-mode 'elixir-mode)
          (exunit-rerun)
        )
      )
    )

   #+END_SRC
** InfElixir

   #+BEGIN_SRC emacs-lisp

    (use-package inf-elixir
      :load-path "packages/inf-elixir/"
      :bind (
        ("C-c C-l i i" . 'inf-elixir)
        ("C-c C-l i p" . 'inf-elixir-project)
        ("C-c C-l i l" . 'inf-elixir-send-line)
        ("C-c C-l i r" . 'inf-elixir-send-region)
        ("C-c C-l i b" . 'inf-elixir-send-buffer)
      )
    )

   #+END_SRC
