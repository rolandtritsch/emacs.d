* Install/configure the support for elixir

** First things first

   #+BEGIN_SRC emacs-lisp

     (use-package elixir-mode)
     (add-hook 'before-save-hook
       (lambda ()
         (when (eq major-mode 'elixir-mode)
           (elixir-format))))

   #+END_SRC

** LSP

   #+BEGIN_SRC emacs-lisp

    (use-package lsp-mode
      :commands lsp
      :ensure t
      :diminish lsp-mode
      :hook (
        (elixir-mode . lsp-deferred)
      )
      :init
      (add-to-list 'exec-path "~/.local/bin/elixir_ls")
   )

   #+END_SRC

   Note: You also need to install [[https://github.com/elixir-lsp/elixir-ls][elixir_ls]] ...

   - =mix elixir_ls.release -o ~/.local/bin/elixir_ls=

** ExUnit

   #+BEGIN_SRC emacs-lisp

    (use-package exunit
      :bind (
        ("C-c C-u u" . 'exunit-verify-all)
        ("C-c C-u f" . 'exunit-verify)
        ("C-c C-u p" . 'exunit-verify-single)
        ("C-c C-u r" . 'exunit-rerun)
        ("C-c C-u t" . 'exunit-toggle-file-and-test)
      )
      :hook (
        (after-save . my-exunit-after-save-hook)
      )
      :config
      (defun my-exunit-after-save-hook ()
        (when (eq major-mode 'elixir-mode)
          (exunit-rerun)
        )
      )
    )

   #+END_SRC
** InfElixir

   #+BEGIN_SRC emacs-lisp

    (use-package inf-elixir
      :load-path "packages/inf-elixir/"
      :bind (
        ("C-c C-l i i" . 'inf-elixir)
        ("C-c C-l i p" . 'inf-elixir-project)
        ("C-c C-l i l" . 'inf-elixir-send-line)
        ("C-c C-l i r" . 'inf-elixir-send-region)
        ("C-c C-l i b" . 'inf-elixir-send-buffer)
      )
    )

   #+END_SRC
** Mix

   #+BEGIN_SRC emacs-lisp

    (use-package mix
      :load-path "packages/mix.el/"
    )

   #+END_SRC
